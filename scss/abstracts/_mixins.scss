// ===== ALL MIXINS =====//


// Used to set the background colour of the primary navigation items in the header
@mixin service-background-colour-on-hover($service-name) {

    $service-colour: map-get($services-colours, $service-name);
    $service-modifier-name: str-replace($service-name, ' ', '-');

    .primary-nav__item--#{ $service-modifier-name } {
        &:hover .primary-nav__item-link {
            background-color: $service-colour;
        }
    }
}


//=====BREAKPOINT MIXINS=====//

// For handling media query syntax 
@mixin breakpoint($name) {
    @if map-has-key($breakpoints, $name) {
        @media (min-width: map-get($breakpoints, $name)) {
            @content;
        }
    }

    @else {
        @warn "Unknown breakpoint: #{$name}.";
    }
}

// Set appropriate container width for each breakpoint with one mixin
@mixin set-container-width-for-breakpoints() {

    // Default margin from viewport edge for narrow screens
    margin-left: 1rem;
    margin-right: 1rem;

    // Keep container edges away from the viewport edges near breakpoints
    padding-left: 1rem;
    padding-right: 1rem;

    @media (min-width: map-get($breakpoints, narrow-to-medium)) {
        width: map-get($container-width, small);
        margin-left: auto;
        margin-right: auto;
    }

    @media (min-width: map-get($breakpoints, medium-to-wide)) {
        width: map-get($container-width, medium);
        margin-left: auto;
        margin-right: auto;
    }

    @media (min-width: map-get($breakpoints, wide-to-extra-wide)) {
        width: map-get($container-width, large);
        margin-left: auto;
        margin-right: auto;
    }
}

//mixin to change color of sm icons in footer on hover etc
@mixin sm-link-bg-colour-hover($social-media-name) {

    $social-media-colour: map-get($social-media-colours, $social-media-name);

    .footer__sm-link--#{ $social-media-name } {
        &:hover {
            background-color: $social-media-colour;
        }
    }
}
